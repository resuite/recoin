.container {
   --expand-origin: calc(50% - 10px) calc(50% - 10px);
   --expand-color: var(--color-canvas-text);
   --expand-size: var(--fab-size);
   display: contents;
   isolation: isolate;
   overflow: hidden;
   max-height: 100dvh;
   max-width: 100dvw;
}

.content {
   position: fixed;
   top: 0;
   width: 100dvw;
   height: 100dvh;
   isolation: isolate;

   &:empty,
   &:not(.container[data-open] > &) {
      display: none;
   }
}

/*
   We couldn't use the clip-path property, because it isn't hardware accelerated
   (yet?) and animations with it are buggy in Firefox.

   This element instead uses a scale transform to create the clipping effect, where
   it covers the entire viewport and then disappears, allowing the content to be
   visible.
*/
.clipPath {
   position: fixed;
   width: var(--expand-size);
   height: var(--expand-size);
   border-radius: 50%;
   background-color: var(--expand-color);
   pointer-events: none;
   inset: var(--expand-origin);
   will-change: opacity, scale;
   transition-property: scale;

   .container[data-open] > & {
      transition-duration: var(--speed-slow);
      transition-timing-function: ease-in-out;
      scale: 18;
   }

   .container:not([data-open]) > & {
      transition-duration: var(--speed-bit-slower);
      scale: 0;
   }
}
